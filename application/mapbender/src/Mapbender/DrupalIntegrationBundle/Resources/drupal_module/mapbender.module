<?php

global $conf;

require_once $conf['mapbender']['path'] . '/bootstrap.php.cache';
require_once $conf['mapbender']['path'] . '/AppKernel.php';

use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Session;
use Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeSessionHandler;
use Mapbender\DrupalIntegrationBundle\Session\DrupalSessionStorage;
use Mapbender\DrupalIntegrationBundle\Session\DrupalSessionHandler;

function mapbender_menu()
{
    return array(
        'mapbender' => array(
            'title' => 'Mapbender3 Sandbox',
            'page callback' => 'mapbender_show_view',
            'access arguments' => array('access content'),
            'type' => MENU_CALLBACK,
        ),
    );
}

function mapbender_replace_uri($uri)
{
    $destination = drupal_get_destination();
    $destination = preg_replace('/\?.*/', '', $destination['destination']);

    return preg_replace_callback(
        '#/\?q=('.$destination.')/?(?:&?(.*))$#',
        function ($matches) {
            $result = '/'.$matches[1];
            if ('symfony' === $matches[1]) {
                $result .= '/';
            }
            return $result . ((isset($matches[2])) ? '?'.$matches[2] : '');
        },
        $uri);
}

function startsWith($haystack, $needle)
{
    return !strncmp($haystack, $needle, strlen($needle));
}

function endsWith($haystack, $needle)
{
    $length = strlen($needle);
    if ($length == 0) {
        return true;
    }
    return (substr($haystack, -$length) === $needle);
}

function mapbender_mburi_to_drupal($uri)
{
    $dp = str_replace('index.php', '', $_SERVER['PHP_SELF']);
    if(stripos($uri, $dp . 'mapbender') !== false) {
        $uri = str_replace($dp . 'mapbender', $dp . '?q=mapbender', $uri);
    }
    return $uri;
}

function mapbender_show_view()
{
    global $base_url, $conf;

    $server = $_SERVER;

    if (isset($_REQUEST['q'])) {
        $server['REQUEST_URI'] = mapbender_replace_uri($server['REQUEST_URI']);
    }

    $server['SCRIPT_FILENAME'] = str_replace('/index.php/', '/', $server['SCRIPT_FILENAME'].'/mapbender');
    $server['SCRIPT_NAME'] = $server['PHP_SELF'] = $GLOBALS['base_path'].'mapbender';

    $_SESSION['is_mb3'] = true;
    $request = new Request($_GET, $_POST, array(), $_COOKIE, $_FILES, $server);

    $kernel = new AppKernel($conf['mapbender']['env'], true);
    $kernel->boot();

    $kernel->getContainer()->set('session.storage.native', new DrupalSessionStorage());
    $kernel->getContainer()->set('session.handler', new NativeSessionHandler());

    $response = $kernel->handle($request);

    // owsproxy sometimes sends redirects, so fix the location header here
    if($response->getStatusCode() === 301) {
        $loc = $response->headers->get('Location');
        if(strpos($loc,'mapbender/owsproxy/')) {
            $loc = str_replace('mapbender/owsproxy/', '?q=mapbender/owsproxy/', $loc);
            $response->headers->set('Location', $loc);
        }
        $response->sendHeaders();
        $response->sendContent();
        return;
    }

    if(strpos($response->headers->get('Content-Type'), 'text/html') !== False) {
        $DOM = new DOMDocument;
        libxml_use_internal_errors(true);
        $DOM->loadHTML($response->getContent());
        libxml_clear_errors();

        $protocol = isset($_SERVER['HTTPS']) ? 'https://' : 'http://';
        $server = $_SERVER['HTTP_HOST'];

        foreach($DOM->getElementsByTagName('link') as $link) {
            switch($link->getAttribute('rel')) {
                case '':
                case 'stylesheet':
                    if($link->getAttribute('href')) {
                        $stylesheet = $protocol . $server . $link->getAttribute('href');
                        drupal_add_css($stylesheet, array('type' => 'external'));
                    } else {
                        drupal_add_css($link->textContent, 'inline');
                    }
                    //                    $link->parentNode->removeChild($link);
            }
        }

        foreach($DOM->getElementsByTagName('a') as $link) {
            if($link->getAttribute('href')) {
                $href = mapbender_mburi_to_drupal($link->getAttribute('href'));
                $link->setAttribute('href', $href);
            }
        }

        // script loading/evaluation order is tricky
        // seems a few of the scripts already get loaded using the old address, we're kind of almost too late here
        $added_scripts = array();

        foreach($DOM->getElementsByTagName('script') as $script) {
            $href = $script->getAttribute('src');
            if($href) {
                $href = mapbender_mburi_to_drupal($href);
                if(endsWith($href, 'jquery-ui.min.js')) {
                    drupal_add_js($href, array('type' => 'external', 'weight'=>-19, 'group'=>JS_LIBRARY));
                    // unknown why this breaks things
                    //$added_scripts[] = $script;
                } else if(endsWith($href, 'jquery-1.4.4.js')) {
                    // already loaded by drupal
                } else if(endsWith($href, 'jquery-1.9.1.min.js')) {
                    // already loaded by drupal
                } else {
                    drupal_add_js($href, array('type' => 'external', 'defer'=>true));
                    // unknown why this breaks things
                    $added_scripts[] = $script;
                }
            } else {
                // symfony stuff does not work within drupal
                if(strpos($script->textContent, 'Sfjs') === false) {
                    drupal_add_js($script->textContent, array('type'=>'inline', 'group'=>JS_LIBRARY));
                    $added_scripts[] = $script;
                }
            }
        }

        foreach($DOM->getElementsByTagName('form') as $form) {
            $action = $form->getAttribute('action');
            if($action) {
                $action = mapbender_mburi_to_drupal($action);
                $form->setAttribute('action', $action);
            }
        }

        // unknown yet whether this is needed
        /* $xpath = new DOMXpath($DOM); */
        /* $nl = $xpath->query('//\*[@data-url]'); */
        /* for($i = 0; $i < $nl->length; ++$i) { */
        /*     $node = $nl->item($i); */
        /*     $url = $node->getAttribute("data-url"); */
        /*     $url = mapbender_mburi_to_drupal($url); */
        /*     $node->setAttribute("data-url", $url); */
        /* } */

        foreach($added_scripts as $script) {
            $script->parentNode->removeChild($script);
        }

        $body = $DOM->getElementsByTagName('body');

        $innerHTML= '';

        $children = $body->item(0)->childNodes;

        foreach ($children as $child) {
            $innerHTML .= $child->ownerDocument->saveXML( $child, LIBXML_NOEMPTYTAG );
        }

        return array(
            '#markup' => $innerHTML
        );

    } else {
        $response->sendHeaders();
        $response->sendContent();
        return;
    }

}
